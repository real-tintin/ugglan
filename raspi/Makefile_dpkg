# Makefile for cross compiling (using Docker) of the Ugglan
# application for target (Raspberry Pi Zero 2 W) and
# building a Debian package.
#

RASPI_ROOT = $(shell pwd)
IMAGE_ROOT = /raspi

UID = $(shell id -u)
GID = $(shell id -g)

IMAGE_NAME = raspi:target

TARGET_NAME = ugglan_app
BUILD_SUFFIX = dpkg

PROFILE_CXXFLAGS = -pg

.DEFAULT_GOAL := build_dpkg

.PHONY: build_image build_app build_dpkg build_app_for_profiling \
build_dpkg_for_profiling clean

build_image:
	docker build --platform linux/arm/v7 \
		-t ${IMAGE_NAME} \
		--build-arg IMAGE_ROOT=${IMAGE_ROOT} \
		.

build_app: build_image
	docker run  --platform linux/arm/v7 \
		-v ${RASPI_ROOT}:${IMAGE_ROOT} \
		--user $(UID):$(GID) \
		--env TARGET_NAME=${TARGET_NAME} \
		--env BUILD_SUFFIX=${BUILD_SUFFIX} \
		${IMAGE_NAME} make all -j8

build_dpkg: build_app
	docker run  --platform linux/arm/v7 \
		-v ${RASPI_ROOT}:${IMAGE_ROOT} \
		--user $(UID):$(GID) \
		--env TARGET_NAME=${TARGET_NAME} \
		--env BUILD_SUFFIX=${BUILD_SUFFIX} \
		${IMAGE_NAME} ./build_dpkg.sh

build_app_for_profiling: build_image
	docker run  --platform linux/arm/v7 \
		-v ${RASPI_ROOT}:${IMAGE_ROOT} \
		--user $(UID):$(GID) \
		--env TARGET_NAME=${TARGET_NAME} \
		--env BUILD_SUFFIX=${BUILD_SUFFIX} \
		--env EXTRA_CXXFLAGS=${PROFILE_CXXFLAGS} \
		${IMAGE_NAME} make all -j8

build_dpkg_for_profiling: build_app_for_profiling
	docker run  --platform linux/arm/v7 \
		-v ${RASPI_ROOT}:${IMAGE_ROOT} \
		--user $(UID):$(GID) \
		--env TARGET_NAME=${TARGET_NAME} \
		--env BUILD_SUFFIX=${BUILD_SUFFIX} \
		${IMAGE_NAME} ./build_dpkg.sh

clang_format: build_image
	docker run  --platform linux/arm/v7 \
		-v ${RASPI_ROOT}:${IMAGE_ROOT} \
		--user $(UID):$(GID) \
		${IMAGE_NAME} \
		bash -c " \
		find ./src ./inc -type f -iname "*.cpp" -o -iname "*.hpp" | xargs \
		clang-format \
        -style=file \
        --Werror \
        --dry-run \
		"

clang_tidy: build_image
	docker run  --platform linux/arm/v7 \
		-v ${RASPI_ROOT}:${IMAGE_ROOT} \
		--user $(UID):$(GID) \
		${IMAGE_NAME} \
		bash -c " \
		clang-tidy \
		./inc/*.hpp ./src/*.cpp -- \
		-isystem ./lib -I ./inc \
		-Wall -Werror -Wno-psabi -std=c++17 -pthread -MD \
		"

clean:
	docker run  --platform linux/arm/v7 \
		-v ${RASPI_ROOT}:${IMAGE_ROOT} \
		--user $(UID):$(GID) \
		--env TARGET_NAME=${TARGET_NAME} \
		--env BUILD_SUFFIX=${BUILD_SUFFIX} \
		${IMAGE_NAME} make clean
