
name: ci
on: [push]

env:
  artifact-path: ./raspi/build_dpkg/ugglan.deb
  artifact-name: ugglan.deb
  artifact-mime-type: application/x-tar

  release-name: Release latest
  release-tag: latest

  DOCKER_BUILDKIT: 1

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Setup docker buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Setup qemu
        uses: docker/setup-qemu-action@v2
        with:
          platforms: linux/arm/v7
      -
        name: Build documentation
        run: make -C ./doc
      -
        name: Install tools & unit test
        run: make -C ./tools
      -
        name: Compile (host) raspi & unit test
        run: make -C ./raspi -f Makefile_tests
      -
        name: Compile (target) raspi & build dpkg
        run: make -C ./raspi -f Makefile_dpkg
      -
        name: Cache (upload) release artifact
        uses: actions/cache@v2
        with:
          path: ${{ env.artifact-path }}
          key: ${{ runner.os }}-artifact-${{ github.sha }}

  release:
    runs-on: ubuntu-latest
    needs: build-test
    if: github.ref == 'refs/heads/main'

    steps:
      -
        name: Cache (download) release artifact
        uses: actions/cache@v2
        with:
          path: ${{ env.artifact-path }}
          key: ${{ runner.os }}-artifact-${{ github.sha }}
      -
        name: Remove previous release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: ${{ env.release-tag }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Create release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.release-tag }}
          release_name: ${{ env.release-name }}
      -
        name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }}
          asset_path: ${{ env.artifact-path }}
          asset_name: ${{ env.artifact-name }}
          asset_content_type: ${{ env.artifact-mime-type }}
